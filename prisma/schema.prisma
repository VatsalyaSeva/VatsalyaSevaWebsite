// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = "mysql://w7umrbmgeb86rvqmt80f:pscale_pw_NYsyGkqvDgvfS1jSwS4st6X712qb6ld1FzmNGNSHl75@us-east.connect.psdb.cloud/vss_main?sslaccept=strict"
    relationMode = "prisma"
}

model adminUser {
    id         String @id
    email      String
    password   String
    phone      String
    unlockCode String
}

model Donator {
    id            String     @id @default(cuid())
    name          String
    countryCode   String
    phone         String     @unique
    email         String     @unique
    address       String?
    postalCode    String?
    totalDonation Int
    passwordHash  String
    donations     Donation[]
    createdAt     DateTime   @default(now())

    @@index([email])
}

model Donation {
    id            String   @id @default(cuid())
    donaterId     String
    amount        Int
    transactionId String?
    status        Boolean  @default(false)
    donater       Donator  @relation(fields: [donaterId], references: [id])
    createdAt     DateTime @default(now())

    @@index([donaterId])
}

model Vacancy {
    id                 String      @id @default(cuid())
    vacancyName        String
    vacancyDescription String      @db.Text()
    jobCount           Int
    salary             Int
    fees               Int
    applecants         Applicant[]
    lastSubmissionDate String
    interviewDate      String
    location           String
    qrCodePath         String?
    qrCodePathUrl      String?
    createdAt          DateTime    @updatedAt
}

model Applicant {
    id            String   @id @default(cuid())
    name          String
    phone         String
    email         String
    cvFilePath    String
    cvFilePathUrl String
    transactionId String
    upiId         String
    vacancyId     String
    vacancy       Vacancy  @relation(fields: [vacancyId], references: [id])
    createdAt     DateTime @updatedAt

    @@index([vacancyId])
}

model Events {
    id               String             @id @default(cuid())
    name             String
    description      String             @db.Text()
    dateTime         String
    location         String
    coverImage       String?
    coverImageUrl    String?
    additionalImages AdditionalImages[]
    additionalVideos AdditionalVideos[]
    organizers       Organizers[]
    specialGuests    SpecialGuest[]
    performers       Performer[]
    updatedAt        DateTime           @updatedAt
}

model Organizers {
    id       String @id @default(cuid())
    memberId String
    name     String
    role     String
    event    Events @relation(fields: [eventId], references: [id])
    eventId  String

    @@index([eventId])
}

model SpecialGuest {
    id            String  @id @default(cuid())
    name          String
    profilePic    String?
    profilePicUrl String?
    bio           String?
    event         Events  @relation(fields: [eventId], references: [id])
    eventId       String

    @@index([eventId])
}

model Performer {
    id            String  @id @default(cuid())
    name          String
    profilePic    String?
    profilePicUrl String?
    bio           String?
    event         Events  @relation(fields: [eventId], references: [id])
    eventId       String

    @@index([eventId])
}

model AdditionalImages {
    id       String @id @default(cuid())
    image    String
    imageUrl String
    Events   Events @relation(fields: [eventsId], references: [id])
    eventsId String

    @@index([eventsId])
}

model AdditionalVideos {
    id       String @id @default(cuid())
    video    String
    videoUrl String
    Events   Events @relation(fields: [eventsId], references: [id])
    eventsId String

    @@index([eventsId])
}

model Member {
    id            String   @id @default(cuid())
    name          String
    email         String   @unique
    phoneNumber   String
    address       String
    membership    String
    profilePic    String?
    profilePicUrl String?
    role          String
    updatedAt     DateTime @updatedAt
}

model HomeImages {
    id               String   @id @default(cuid())
    imageSource      String
    imageSourceUrl   String
    imageDescription String?
    updatedAt        DateTime @updatedAt
}
