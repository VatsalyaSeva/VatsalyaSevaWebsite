// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model adminUser {
    id         String @id
    email      String
    password   String
    phone      String
    unlockCode String
}

model Donater {
    id          String     @id @default(cuid())
    name        String
    countryCode String
    phone       String     @unique
    email       String     @unique
    address     String
    postalCode  String
    password    String
    Donation    Donation[]
    createdAt   DateTime
}

model Donation {
    id            String   @id @default(cuid())
    donaterId     String
    amount        Int
    country       String
    transactionId String
    status        Boolean  @default(false)
    donater       Donater  @relation(fields: [donaterId], references: [id])
    createAt      DateTime @updatedAt

    @@index([donaterId])
}

model Vacancy {
    id                 String       @id @default(cuid())
    vacancyName        String
    vacancyDescription String       @db.Text()
    jobCount           Int
    salary             Int
    fees               Int
    applecants         Applecants[]
    lastSubmissionDate DateTime
    interviewDate      DateTime
    location           String
    createdAt          DateTime     @updatedAt
}

model Applecants {
    id         String   @id @default(cuid())
    name       String
    phone      String
    email      String
    cvFilePath String
    vacancyId  String
    vacancy    Vacancy  @relation(fields: [vacancyId], references: [id])
    createdAt  DateTime @updatedAt

    @@index([vacancyId])
}

model Events {
    id               String             @id @default(cuid())
    name             String
    description      String             @db.Text()
    dateTime         String
    location         String
    coverImage       String?
    additionalImages AdditionalImages[]
    additionalVideos AdditionalVideos[]
    organizers       Organizers[]
    specialGuests    SpecialGuest[]
    performers       Performer[]
    updatedAt        DateTime           @updatedAt
}

model Organizers {
    id       String @id @default(cuid())
    memberId String
    name     String
    role     String
    event    Events @relation(fields: [eventId], references: [id])
    eventId  String

    @@index([eventId])
}

model SpecialGuest {
    id         String  @id @default(cuid())
    name       String
    profilePic String?
    bio        String?
    event      Events  @relation(fields: [eventId], references: [id])
    eventId    String

    @@index([eventId])
}

model Performer {
    id         String  @id @default(cuid())
    name       String
    profilePic String?
    bio        String?
    event      Events  @relation(fields: [eventId], references: [id])
    eventId    String

    @@index([eventId])
}

model AdditionalImages {
    id       String @id @default(cuid())
    image    String
    Events   Events @relation(fields: [eventsId], references: [id])
    eventsId String

    @@index([eventsId])
}

model AdditionalVideos {
    id       String @id @default(cuid())
    video    String
    Events   Events @relation(fields: [eventsId], references: [id])
    eventsId String

    @@index([eventsId])
}

model Member {
    id          String   @id @default(cuid())
    name        String
    email       String   @unique
    phoneNumber String
    address     String
    membership  DateTime
    profilePic  String?
    role        String
    updatedAt   DateTime @updatedAt
}
