// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model adminUser {
  id         String @id
  email      String
  password   String
  phone      String
  unlockCode String
}

model Donater {
  id          String     @id @default(uuid())
  name        String
  countryCode String
  phone       String     @unique
  email       String     @unique
  address     String
  postalCode  String
  password    String
  Donation    Donation[]
  createdAt   DateTime
}

model Donation {
  id            Int      @id @default(autoincrement())
  donaterId     String
  amount        Int
  country       String
  transactionId String
  status        Boolean  @default(false)
  donater       Donater  @relation(fields: [donaterId], references: [id])
  createAt      DateTime @updatedAt
}

model Vacancy {
  id                 Int          @id @default(autoincrement())
  vacancyName        String
  vacancyDescription String       @db.Text()
  jobCount           Int
  salary             Int
  fees               Int
  applecants         Applecants[]
  lastSubmissionDate DateTime
  interviewDate      DateTime
  location           String
  createdAt          DateTime     @updatedAt
}

model Applecants {
  id         String   @id @default(uuid())
  name       String
  phone      String
  email      String
  cvFilePath String
  vacancyId  Int
  vacancy    Vacancy  @relation(fields: [vacancyId], references: [id])
  createdAt  DateTime @updatedAt
}

model Events {
  id        String   @id @default(uuid())
  name      String
  date      DateTime
  location  String
  imagesUrl Image[]
  videoUrl  Video[]
}

model Image {
  id       Int    @id @default(autoincrement())
  image    String
  Events   Events @relation(fields: [eventsId], references: [id])
  eventsId String
}

model Video {
  id       Int    @id @default(autoincrement())
  video    String
  Events   Events @relation(fields: [eventsId], references: [id])
  eventsId String
}
